#!/bin/bash

# This script will create password secrets for the given Usernames.
# The password secrets will be generated by default on onetimesecrect.com, but you can change this
# to your own ots instance.
# You need CURL and JQ to run this script probably.

BUILDNUMBER="21090903"
VERSION="1.01.${BUILDNUMBER}"
RELEASE="Cindy caught creepy caterpillars and cool crickets close to the carnations and camellias in Claudia's cottage."

#### Variables

OTSINSTANCE="onetimesecret.com"
APIPATH="/api/v1/"
APITOKEN="<to-be-defined>"
APIUSER="<to-be-defined>"
RECIPIENT=""
LIST=""
USERNAME=""
PASSWORD=""
PWLENGTH=20
OUTPUTFILE="${HOME}/ots-links.csv"
TTL=14

VERBOSEOUT=""
WUMMMMS=false

CURL=$(type -p curl)
AWK=$(type -p awk)
SED=$(type -p sed)
JQ=$(type -p jq)

FULLOTSURL="https://${OTSINSTANCE}${APIPATH}"

TTLINSECONDS=$(( ${TTL} * 24 * 60 * 60 ))

#### Check dependencies
# check for mandatory tools
if [[ -z ${SED} ]];
	then
		echo -e "\033[31mERROR:\e[0m sed not found, but is needed. Exit!\n"
		exit 1
fi
if [[ -z ${CURL} ]];
	then
		echo -e "\033[31mERROR:\e[0m cURL not found, but is needed. Exit!\n"
		exit 1
fi
if [[ -z ${AWK} ]];
	then
		echo -e "\033[31mERROR:\e[0m awk not found, but is needed. Exit!\n"
		exit 1
fi
if [[ -z ${JQ} ]];
	then
		echo -e "\033[31mERROR:\e[0m jq not found, but is needed. Exit!\n"
		exit 1
fi

#### Functions

wumms ()
{
	echo -e "\n"
	echo "  WWWWWWWW                           WWWWWWWWUUUUUUUU     UUUUUUUUMMMMMMMM               MMMMMMMMMMMMMMMM               MMMMMMMM   SSSSSSSSSSSSSSS  !!!  !!!  !!! "
	echo "  W::::::W                           W::::::WU::::::U     U::::::UM:::::::M             M:::::::MM:::::::M             M:::::::M SS:::::::::::::::S!!:!!!!:!!!!:!!"
	echo "  W::::::W                           W::::::WU::::::U     U::::::UM::::::::M           M::::::::MM::::::::M           M::::::::MS:::::SSSSSS::::::S!:::!!:::!!:::!"
	echo "  W::::::W                           W::::::WUU:::::U     U:::::UUM:::::::::M         M:::::::::MM:::::::::M         M:::::::::MS:::::S     SSSSSSS!:::!!:::!!:::!"
	echo "   W:::::W           WWWWW           W:::::W  U:::::U     U:::::U M::::::::::M       M::::::::::MM::::::::::M       M::::::::::MS:::::S            !:::!!:::!!:::!"
	echo "    W:::::W         W:::::W         W:::::W   U:::::D     D:::::U M:::::::::::M     M:::::::::::MM:::::::::::M     M:::::::::::MS:::::S            !:::!!:::!!:::!"
	echo "     W:::::W       W:::::::W       W:::::W    U:::::D     D:::::U M:::::::M::::M   M::::M:::::::MM:::::::M::::M   M::::M:::::::M S::::SSSS         !:::!!:::!!:::!"
	echo "      W:::::W     W:::::::::W     W:::::W     U:::::D     D:::::U M::::::M M::::M M::::M M::::::MM::::::M M::::M M::::M M::::::M  SS::::::SSSSS    !:::!!:::!!:::!"
	echo "       W:::::W   W:::::W:::::W   W:::::W      U:::::D     D:::::U M::::::M  M::::M::::M  M::::::MM::::::M  M::::M::::M  M::::::M    SSS::::::::SS  !:::!!:::!!:::!"
	echo "        W:::::W W:::::W W:::::W W:::::W       U:::::D     D:::::U M::::::M   M:::::::M   M::::::MM::::::M   M:::::::M   M::::::M       SSSSSS::::S !:::!!:::!!:::!"
	echo "         W:::::W:::::W   W:::::W:::::W        U:::::D     D:::::U M::::::M    M:::::M    M::::::MM::::::M    M:::::M    M::::::M            S:::::S!!:!!!!:!!!!:!!"
	echo "          W:::::::::W     W:::::::::W         U::::::U   U::::::U M::::::M     MMMMM     M::::::MM::::::M     MMMMM     M::::::M            S:::::S !!!  !!!  !!! "
	echo "           W:::::::W       W:::::::W          U:::::::UUU:::::::U M::::::M               M::::::MM::::::M               M::::::MSSSSSSS     S:::::S               "
	echo "            W:::::W         W:::::W            UU:::::::::::::UU  M::::::M               M::::::MM::::::M               M::::::MS::::::SSSSSS:::::S !!!  !!!  !!! "
	echo "             W:::W           W:::W               UU:::::::::UU    M::::::M               M::::::MM::::::M               M::::::MS:::::::::::::::SS !!:!!!!:!!!!:!!"
	echo "              WWW             WWW                  UUUUUUUUU      MMMMMMMM               MMMMMMMMMMMMMMMM               MMMMMMMM SSSSSSSSSSSSSSS    !!!  !!!  !!! "
	echo ""
}

usage ()
{
	echo -e "\n\n$(basename $0)"
	echo -e "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	echo -e "This script is for generating passwords and creating onetime links for a password exchange."
	echo -e "with your users. You can define a password by yourself and hand it over to this script."
	echo -e "It is also possible to hand over a list with parameter -f,"
	echo -e "but please use the suggested format for the list."
	echo -e ""
	echo -e "Dependencies:"
	echo -e "You need CURL and JQ to run this script! Please install these little tools before"
	echo -e "runing this script."
	echo -e ""
	echo -e "Usage : $(basename $0) "
	echo -e ""
	echo -e "\t-W\t\tUse this script with power!"
	echo -e "\t-V\t\tMore Output as usual - for debugging."
	echo -e "\t-L\t\tChose the amount of characters in the password.\n\t\t\t\e[92mDefault: 20\e[0m"
	echo -e "\t-v\t\tVersion and Release of this script."
	echo -e "\t-R\t\tSpecify a recipient. Value needs to be an valid email address.\n\t\t\tThe recipient will be set in ots."
	echo -e "\t-U\t\tSpecify a Username. The Username will also be set in OTS Secret."
	echo -e "\t-f\t\tFile with usernames and passwords. The Username is mandatory.\n\t\t\t\tPlease use the following format for the file:\n\t\t\t\tFirst column Username and second column password.\n\t\t\t\tPlease use a TAB as delimeter.\n\t\t\t\t\e[31mPlease use no headerrow\e[0m!\n"
	echo -e "\t\t\tIf a file is passed to the script, the output will also safed to a file."
	echo -e "\t-O\t\tSpecify a outputfile. \n\t\t\t\e[92mDefault: ${OUTPUTFILE}\e[0m"
	echo -e "\t-P\t\tSpecify a password, that will be send via ots link."
	echo -e "\t-t\t\tOnly check if the ots instance is fine and reachable."
	echo -e ""
	echo -e "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	echo -e ""
	echo -e "\n\e[92mVersion: $VERSION"
	echo -e "Release: $RELEASE"
	echo -e "Copyright by \e[0m\e[1;44;214mCLOUDSUPPLIES\e[0;0;92m - Created by Ulli\n\n\e[0m"
	exit
}

checking_lifestate ()
{
	## Check if OTS instance is reachable and healthy
	echo -e "\n##########################################################\n"
	echo -e "Checking if ots instance is reachable...\n"
	otsreach=$(ping -c1 ${OTSINSTANCE} > /dev/null 2>&1;)
	if [[ ${otsreach} -ne 0 ]];
		then 
			echo -e "OTS instance is\t[\e[31mnot reachable\e[0m]\n"
			echo -e "Leaving script - check the ots instance and configuration"
			echo -e "\n##########################################################\n"
			exit 1;
		else 
			echo -e "OTS instance is\t[\e[92mreachable\e[0m]\n"
	fi

	echo -e "Checking if ots instance is healthy...\n"
	otsstatus=$(curl -s ${FULLOTSURL}status | jq .status | sed -e 's/^"//' -e 's/"$//')
	if [[ ${otsstatus} -eq "nominal" ]]; 
		then 
			echo -e "OTS instance is\t[\e[92mhealthy\e[0m]\n"
		else 
			echo -e "OTS instance is\t[\e[31mnot healthy\e[0m]\n"
			echo -e "Leaving script - check the ots instance and/or configuration"
			echo -e "\n##########################################################\n"
			exit 1;
	fi	
	echo -e "Everything seems nice and sweet!"
	echo -e "\n##########################################################\n"
}

generate_password ()
{
	tr -dc 'A-Za-z0-9!"<>'\''()*,-./:;<=>?@[\]^_`{|}~' </dev/urandom | head -c${1}; echo
}

generate_ots_link ()
{
	if [[ ! -z ${2} ]];
		then
			pwonetimelink=$(curl -s -d "secret=${1}" -d "ttl=${TTLINSECONDS}" -d "recipient=${2}" -u "${APIUSER}:${APITOKEN}" ${FULLOTSURL}share | jq .secret_key | sed -e 's/^"//' -e 's/"$//';)
			echo "https://${OTSINSTANCE}/secret/${pwonetimelink}"
		else
			pwonetimelink=$(curl -s -d "secret=${1}" -d "ttl=${TTLINSECONDS}" -u "${APIUSER}:${APITOKEN}" ${FULLOTSURL}share | jq .secret_key | sed -e 's/^"//' -e 's/"$//';)
			echo "https://${OTSINSTANCE}/secret/${pwonetimelink}"
	fi
	echo -e ""
}

#### Options
while getopts VbWL:f:vU:P:R:th opt 2>/dev/null
do
   case $opt in
	V)	VERBOSEOUT=true;;
	b)	BATCHOUT=true;;
	W)	wumms;;
	L)	
		if [[ ${OPTARG} -le "8" ]]; 
			then echo -e "\n\e[31mYour chosen passwordlength of ${OPTARG} character is not so much secure!\n\e[0mWe suggest 12 character and more.\n\nDefault of this script is 20 chars.\n\n"
			PWLENGTH=${OPTARG}
		else
			PWLENGTH=${OPTARG}
		fi
		;;
	f)	LIST=${OPTARG};;
	v) 	echo -e "\n$(basename $0) - Version: ${VERSION}"
		echo -e "${RELEASE}"
		exit;;
	U)
		USERNAME=${OPTARG};;
	P)
		PASSWORD=${OPTARG};;
	R)
		RECIPIENT=${OPTARG};;
	t)
		checking_lifestate
		exit;;
    \?) echo -e "\n($0): \033[31mERROR:\e[0m - A wild error occurs in the gras - get a pokeball... and check the chosen options."
        exit 1;;
	h|*)usage
		exit;;
   esac
done

#### maincode

if [[ ! -z ${VERBOSEOUT} ]];
then
	checking_lifestate
fi

if [[ -z ${LIST} ]];
	then
		if [[ -z ${PASSWORD} ]];
			then
				echo -e "Generating a strong password for you...\n"
				PASSWORD=$(generate_password ${PWLENGTH})
		fi
fi

if [[ ! -z ${VERBOSEOUT} ]];
	then
		## For debugging
		echo -e "This is the password:\n\t${PASSWORD}\n"
fi

if [[ ! -z ${LIST} ]]
	then
		USERNAMES=($(awk -F'\t' '{ print $1 }' ${LIST}))
		PASSWORDS=($(awk -F'\t' '{ print $2 }' ${LIST}))
		counter=0
		echo -e "Username;Username ots link;Password ots link" > ${OUTPUTFILE}
		for user in "${USERNAMES[@]}" 
		do
			echo -e "Generating ots links username [\e[33m${user}\e[0m]."
			OTSUSERLINK=$(generate_ots_link ${user} ${RECIPIENT})
			if [[ ! -z ${PASSWORDS} ]];
				then
					echo -e "Generating ots links for password (${PASSWORDS[${counter}]}) to user [\e[33m${user}\e[0m]."
					OTSPWLINK=$(generate_ots_link ${PASSWORDS[${counter}]} ${RECIPIENT})

				else		
					PASSWORD=$(generate_password ${PWLENGTH})
					echo -e "Generating ots links for password (${PASSWORD}) to user [\e[33m${user}\e[0m]." 
					OTSPWLINK=$(generate_ots_link ${PASSWORD} ${RECIPIENT})
			fi
			echo -e "${user};${OTSUSERLINK};${OTSPWLINK}" >> ${OUTPUTFILE}
			let counter=$counter+1
		done
	else
		if [[ ! -z ${USERNAME} ]]
			then
				echo -e "Generating ots username link..."
				generate_ots_link ${USERNAME} ${RECIPIENT}
				echo -e "Generating ots password link..."
				generate_ots_link ${PASSWORD} ${RECIPIENT}
			else 
				echo -e "Generating ots password link..."
				generate_ots_link ${PASSWORD} ${RECIPIENT}
		fi
fi
